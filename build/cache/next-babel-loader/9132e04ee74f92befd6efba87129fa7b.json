{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport App from 'next/app';\nimport Router from 'next/router';\nimport { withRouter } from 'next/router';\nimport NProgress from 'nprogress';\nimport '../styles/main.less';\n\nclass MyApp extends App {\n  constructor() {\n    super();\n    this.state = {\n      userAgent: {\n        userAgent: 'pc'\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      pathname\n    } = this.props;\n\n    if (pathname != '/') {\n      Router.push('/');\n    }\n\n    const ua = navigator.userAgent;\n    let userAgent;\n\n    if (ua.indexOf(\"Android\") > 0 || ua.indexOf(\"iPhone\") > 0 || ua.indexOf(\"iPad\") > 0) {\n      userAgent = 'mobile';\n    } else {\n      userAgent = 'pc';\n    }\n\n    this.setState({\n      userAgent: {\n        userAgent\n      }\n    });\n  }\n\n  render() {\n    Router.onRouteChangeStart = url => {\n      NProgress.start();\n    };\n\n    Router.onRouteChangeComplete = () => NProgress.done();\n\n    Router.onRouteChangeError = () => NProgress.done();\n\n    const {\n      Component,\n      pageProps,\n      router: {\n        pathname\n      }\n    } = this.props;\n    const {\n      userAgent\n    } = this.state;\n\n    let myPageProps = _objectSpread({}, pageProps, {}, userAgent);\n\n    return __jsx(Component, myPageProps);\n  }\n\n}\n\nexport default withRouter(MyApp);","map":null,"metadata":{},"sourceType":"module"}